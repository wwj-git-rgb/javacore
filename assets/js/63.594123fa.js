(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{483:function(s,a,t){"use strict";t.r(a);var n=t(19),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jvm-类加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-类加载"}},[s._v("#")]),s._v(" JVM 类加载")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("📦 本文以及示例源码已归档在 "),t("a",{attrs:{href:"https://github.com/dunwu/javacore/",target:"_blank",rel:"noopener noreferrer"}},[s._v("javacore"),t("OutboundLink")],1)])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200617145849.png",alt:"img"}})]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#1-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6"}},[s._v("1. 类加载机制")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#2-%E7%B1%BB%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"}},[s._v("2. 类的生命周期")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#21-%E4%B8%80%E5%8A%A0%E8%BD%BD"}},[s._v("2.1. （一）加载")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#22-%E4%BA%8C%E9%AA%8C%E8%AF%81"}},[s._v("2.2. （二）验证")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#23-%E4%B8%89%E5%87%86%E5%A4%87"}},[s._v("2.3. （三）准备")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#24-%E5%9B%9B%E8%A7%A3%E6%9E%90"}},[s._v("2.4. （四）解析")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#25-%E4%BA%94%E5%88%9D%E5%A7%8B%E5%8C%96"}},[s._v("2.5. （五）初始化")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#3-classloader"}},[s._v("3. ClassLoader")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#31-%E7%B1%BB%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8"}},[s._v("3.1. 类与类加载器")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#32-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%B1%BB"}},[s._v("3.2. 类加载器分类")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#33-%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE"}},[s._v("3.3. 双亲委派")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#34-classloader-%E5%8F%82%E6%95%B0"}},[s._v("3.4. ClassLoader 参数")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#4-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD"}},[s._v("4. 类的加载")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#41-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F"}},[s._v("4.1. 类加载方式")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#42-%E5%8A%A0%E8%BD%BD%E7%B1%BB%E9%94%99%E8%AF%AF"}},[s._v("4.2. 加载类错误")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#5-%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"}},[s._v("5. 参考资料")])])]),s._v(" "),t("h2",{attrs:{id:"_1-类加载机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-类加载机制"}},[s._v("#")]),s._v(" 1. 类加载机制")]),s._v(" "),t("blockquote",[t("p",[s._v("类是在运行期间动态加载的。")])]),s._v(" "),t("p",[s._v("类的加载指的是将类的 "),t("code",[s._v(".class")]),s._v(" 文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个"),t("code",[s._v("java.lang.Class")]),s._v("对象，用来封装类在方法区内的数据结构。类的加载的最终产品是位于堆区中的"),t("code",[s._v("Class")]),s._v("对象，"),t("code",[s._v("Class")]),s._v("对象封装了类在方法区内的数据结构，并且向 Java 程序员提供了访问方法区内的数据结构的接口。")]),s._v(" "),t("p",[s._v("类加载器并不需要等到某个类被“首次主动使用”时再加载它，JVM 规范允许类加载器在预料某个类将要被使用时就预先加载它，如果在预先加载的过程中遇到了.class 文件缺失或存在错误，类加载器必须在程序首次主动使用该类时才报告错误（LinkageError 错误）如果这个类一直没有被程序主动使用，那么类加载器就不会报告错误")]),s._v(" "),t("h2",{attrs:{id:"_2-类的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-类的生命周期"}},[s._v("#")]),s._v(" 2. 类的生命周期")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200617115110.png",alt:"img"}})]),s._v(" "),t("p",[s._v("Java 类的完整生命周期包括以下几个阶段：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("加载（Loading）")])]),s._v(" "),t("li",[t("strong",[s._v("链接（Linking）")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("验证（Verification）")])]),s._v(" "),t("li",[t("strong",[s._v("准备（Preparation）")])]),s._v(" "),t("li",[t("strong",[s._v("解析（Resolution）")])])])]),s._v(" "),t("li",[t("strong",[s._v("初始化（Initialization）")])]),s._v(" "),t("li",[t("strong",[s._v("使用（Using）")])]),s._v(" "),t("li",[t("strong",[s._v("卸载（Unloading）")])])]),s._v(" "),t("p",[s._v("加载、验证、准备、初始化和卸载这 5 个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始。而"),t("strong",[s._v("解析过程在某些情况下可以在初始化阶段之后再开始，这是为了支持 Java 的动态绑定")]),s._v("。")]),s._v(" "),t("p",[s._v("类加载过程是指加载、验证、准备、解析和初始化这 5 个阶段。")]),s._v(" "),t("h3",{attrs:{id:"_2-1-一-加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-一-加载"}},[s._v("#")]),s._v(" 2.1. （一）加载")]),s._v(" "),t("p",[s._v("加载是类加载的一个阶段，注意不要混淆。")]),s._v(" "),t("p",[t("strong",[s._v("加载，是指查找字节流，并且据此创建类的过程")]),s._v("。")]),s._v(" "),t("p",[s._v("加载过程完成以下三件事：")]),s._v(" "),t("ul",[t("li",[s._v("通过一个类的全限定名来获取定义此类的二进制字节流。")]),s._v(" "),t("li",[s._v("将这个字节流所代表的静态存储结构转化为方法区的运行时存储结构。")]),s._v(" "),t("li",[s._v("在内存中生成一个代表这个类的 "),t("code",[s._v("Class")]),s._v(" 对象，作为方法区这个类的各种数据的访问入口。")])]),s._v(" "),t("p",[s._v("其中二进制字节流可以从以下方式中获取：")]),s._v(" "),t("ul",[t("li",[s._v("从 ZIP 包读取，这很常见，最终成为日后 JAR、EAR、WAR 格式的基础。")]),s._v(" "),t("li",[s._v("从网络中获取，这种场景最典型的应用是 Applet。")]),s._v(" "),t("li",[s._v("运行时计算生成，这种场景使用得最多得就是动态代理技术，在 "),t("code",[s._v("java.lang.reflect.Proxy")]),s._v(" 中，就是用了 "),t("code",[s._v("ProxyGenerator.generateProxyClass")]),s._v(" 的代理类的二进制字节流。")]),s._v(" "),t("li",[s._v("由其他文件生成，典型场景是 JSP 应用，即由 JSP 文件生成对应的 Class 类。")]),s._v(" "),t("li",[s._v("从数据库读取，这种场景相对少见，例如有些中间件服务器（如 SAP Netweaver）可以选择把程序安装到数据库中来完成程序代码在集群间的分发。\n...")])]),s._v(" "),t("blockquote",[t("p",[s._v("更详细内容会在 "),t("a",{attrs:{href:"#3-classloader"}},[s._v("3. ClassLoader")]),s._v(" 介绍。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-二-验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-二-验证"}},[s._v("#")]),s._v(" 2.2. （二）验证")]),s._v(" "),t("p",[s._v("验证是链接阶段的第一步。"),t("strong",[s._v("验证的目标是确保 Class 文件的字节流中包含的信息符合当前虚拟机的要求")]),s._v("，并且不会危害虚拟机自身的安全。")]),s._v(" "),t("p",[s._v("验证阶段大致会完成 4 个阶段的检验动作：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("文件格式验证")]),s._v(" - 验证字节流是否符合 Class 文件格式的规范，并且能被当前版本的虚拟机处理。")]),s._v(" "),t("li",[t("strong",[s._v("元数据验证")]),s._v(" - 对字节码描述的信息进行语义分析，以保证其描述的信息符合 Java 语言规范的要求。")]),s._v(" "),t("li",[t("strong",[s._v("字节码验证")]),s._v(" - 通过数据流和控制流分析，确保程序语义是合法、符合逻辑的。")]),s._v(" "),t("li",[t("strong",[s._v("符号引用验证")]),s._v(" - 发生在虚拟机将符号引用转换为直接引用的时候，对类自身以外（常量池中的各种符号引用）的信息进行匹配性校验。")])]),s._v(" "),t("p",[s._v("验证阶段是非常重要的，但不是必须的，它对程序运行期没有影响，如果所引用的类经过反复验证，那么可以考虑采用 "),t("code",[s._v("-Xverifynone")]),s._v(" 参数来关闭大部分的类验证措施，以缩短虚拟机类加载的时间。")]),s._v(" "),t("h3",{attrs:{id:"_2-3-三-准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-三-准备"}},[s._v("#")]),s._v(" 2.3. （三）准备")]),s._v(" "),t("p",[t("strong",[s._v("类变量是被 static 修饰的变量，准备阶段为 static 变量在方法区分配内存并初始化为默认值，使用的是方法区的内存。")])]),s._v(" "),t("p",[s._v("实例变量不会在这阶段分配内存，它将会在对象实例化时随着对象一起分配在 Java 堆中。（实例化不是类加载的一个过程，类加载发生在所有实例化操作之前，并且类加载只进行一次，实例化可以进行多次）")]),s._v(" "),t("p",[s._v("初始值一般为 0 值，例如下面的类变量 value 被初始化为 0 而不是 123。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("如果类变量是常量，那么会按照表达式来进行初始化，而不是赋值为 0。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("准备阶段有以下几点需要注意：")]),s._v(" "),t("ul",[t("li",[s._v("这时候进行内存分配的仅包括类变量（static），而不包括实例变量，实例变量会在对象实例化时随着对象一块分配在 Java 堆中。")]),s._v(" "),t("li",[s._v("这里所设置的初始值通常情况下是数据类型默认的零值（如 "),t("code",[s._v("0")]),s._v("、"),t("code",[s._v("0L")]),s._v("、"),t("code",[s._v("null")]),s._v("、"),t("code",[s._v("false")]),s._v(" 等），而不是被在 Java 代码中被显式地赋予的值。")])]),s._v(" "),t("p",[s._v("假设一个类变量的定义为："),t("code",[s._v("public static int value = 3")]),s._v("；")]),s._v(" "),t("p",[s._v("那么变量 value 在准备阶段过后的初始值为 0，而不是 3，因为这时候尚未开始执行任何 Java 方法，而把 value 赋值为 3 的"),t("code",[s._v("public static")]),s._v("指令是在程序编译后，存放于类构造器"),t("code",[s._v("（）")]),s._v("方法之中的，所以把 value 赋值为 3 的动作将在初始化阶段才会执行。")]),s._v(" "),t("blockquote",[t("p",[s._v("这里还需要注意如下几点：")]),s._v(" "),t("ul",[t("li",[s._v("对基本数据类型来说，对于类变量（static）和全局变量，如果不显式地对其赋值而直接使用，则系统会为其赋予默认的零值，而对于局部变量来说，在使用前必须显式地为其赋值，否则编译时不通过。")]),s._v(" "),t("li",[s._v("对于同时被 static 和 final 修饰的常量，必须在声明的时候就为其显式地赋值，否则编译时不通过；而只被 final 修饰的常量则既可以在声明时显式地为其赋值，也可以在类初始化时显式地为其赋值，总之，在使用前必须为其显式地赋值，系统不会为其赋予默认零值。")]),s._v(" "),t("li",[s._v("对于引用数据类型 reference 来说，如数组引用、对象引用等，如果没有对其进行显式地赋值而直接使用，系统都会为其赋予默认的零值，即 null。")]),s._v(" "),t("li",[s._v("如果在数组初始化时没有对数组中的各元素赋值，那么其中的元素将根据对应的数据类型而被赋予默认的零值。")])])]),s._v(" "),t("ul",[t("li",[s._v("如果类字段的字段属性表中存在"),t("code",[s._v("ConstantValue")]),s._v("属性，即同时被 final 和 static 修饰，那么在准备阶段变量 value 就会被初始化为 ConstValue 属性所指定的值。")])]),s._v(" "),t("p",[s._v("假设上面的类变量 value 被定义为： "),t("code",[s._v("public static final int value = 3")]),s._v("；")]),s._v(" "),t("p",[s._v("编译时 Javac 将会为 value 生成 ConstantValue 属性，在准备阶段虚拟机就会根据"),t("code",[s._v("ConstantValue")]),s._v("的设置将 value 赋值为 3。我们可以理解为 static final 常量在编译期就将其结果放入了调用它的类的常量池中")]),s._v(" "),t("h3",{attrs:{id:"_2-4-四-解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-四-解析"}},[s._v("#")]),s._v(" 2.4. （四）解析")]),s._v(" "),t("p",[s._v("在 class 文件被加载至 Java 虚拟机之前，这个类无法知道其他类及其方法、字段所对应的具体地址，甚至不知道自己方法、字段的地址。因此，每当需要引用这些成员时，Java 编译器会生成一个符号引用。在运行阶段，这个符号引用一般都能够无歧义地定位到具体目标上。")]),s._v(" "),t("p",[s._v("举例来说，对于一个方法调用，编译器会生成一个包含目标方法所在类的名字、目标方法的名字、接收参数类型以及返回值类型的符号引用，来指代所要调用的方法。")]),s._v(" "),t("p",[t("strong",[s._v("解析阶段目标是将常量池的符号引用替换为直接引用的过程")]),s._v("。解析动作主要针对类或接口、字段、类方法、接口方法、方法类型、方法句柄和调用点限定符 7 类符号引用进行。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("符号引用（Symbolic References）")]),s._v(" - 符号引用以一组符号来描述所引用的目标，符号可以是任何形式的字面量，只要使用时能无歧义地定位到目标即可。")]),s._v(" "),t("li",[t("strong",[s._v("直接引用（Direct Reference）")]),s._v(" - 直接引用可以是直接指向目标的指针、相对偏移量或是一个能间接定位到目标的句柄。")])]),s._v(" "),t("h3",{attrs:{id:"_2-5-五-初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-五-初始化"}},[s._v("#")]),s._v(" 2.5. （五）初始化")]),s._v(" "),t("p",[s._v("在 Java 代码中，如果要初始化一个静态字段，可以在声明时直接赋值，也可以在静态代码块中对其赋值。")]),s._v(" "),t("p",[s._v("如果直接赋值的静态字段被 "),t("code",[s._v("final")]),s._v(" 所修饰，并且它的类型是基本类型或字符串时，那么该字段便会被 Java 编译器标记成常量值（ConstantValue），其初始化直接由 Java 虚拟机完成。除此之外的直接赋值操作，以及所有静态代码块中的代码，则会被 Java 编译器置于同一方法中，并把它命名为 "),t("code",[s._v("< clinit >")]),s._v("。")]),s._v(" "),t("p",[s._v("初始化阶段才真正开始执行类中的定义的 Java 程序代码。初始化，"),t("strong",[s._v("为类的静态变量赋予正确的初始值，JVM 负责对类进行初始化，主要对类变量进行初始化")]),s._v("。")]),s._v(" "),t("h4",{attrs:{id:"类初始化方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类初始化方式"}},[s._v("#")]),s._v(" 类初始化方式")]),s._v(" "),t("ul",[t("li",[s._v("声明类变量时指定初始值")]),s._v(" "),t("li",[s._v("使用静态代码块为类变量指定初始值")])]),s._v(" "),t("blockquote",[t("p",[s._v("在准备阶段，类变量已经赋过一次系统要求的初始值，而在初始化阶段，根据程序员通过程序制定的主观计划去初始化类变量和其它资源。")])]),s._v(" "),t("h4",{attrs:{id:"类初始化步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类初始化步骤"}},[s._v("#")]),s._v(" 类初始化步骤")]),s._v(" "),t("ol",[t("li",[s._v("如果类还没有被加载和链接，开始加载该类。")]),s._v(" "),t("li",[s._v("如果该类的直接父类还没有被初始化，先初始化其父类。")]),s._v(" "),t("li",[s._v("如果该类有初始化语句，则依次执行这些初始化语句。")])]),s._v(" "),t("h4",{attrs:{id:"类初始化时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类初始化时机"}},[s._v("#")]),s._v(" 类初始化时机")]),s._v(" "),t("p",[s._v("只有主动引用类的时候才会导致类的初始化。")]),s._v(" "),t("p",[t("strong",[s._v("（1）主动引用")])]),s._v(" "),t("p",[s._v("类的主动引用包括以下六种：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("创建类的实例")]),s._v(" - 也就是 "),t("code",[s._v("new")]),s._v(" 对象")]),s._v(" "),t("li",[t("strong",[s._v("访问静态变量")]),s._v(" - 访问某个类或接口的静态变量，或者对该静态变量赋值")]),s._v(" "),t("li",[t("strong",[s._v("访问静态方法")])]),s._v(" "),t("li",[t("strong",[s._v("反射")]),s._v(" - 如"),t("code",[s._v("Class.forName(“com.shengsiyuan.Test”)")])]),s._v(" "),t("li",[t("strong",[s._v("初始化子类")]),s._v(" - 初始化某个类的子类，则其父类也会被初始化")]),s._v(" "),t("li",[t("strong",[s._v("启动类")]),s._v(" - Java 虚拟机启动时被标明为启动类的类（"),t("code",[s._v("Java Test")]),s._v("），直接使用"),t("code",[s._v("java.exe")]),s._v("命令来运行某个主类")])]),s._v(" "),t("p",[t("strong",[s._v("（2）被动引用")])]),s._v(" "),t("p",[s._v("以上 5 种场景中的行为称为对一个类进行主动引用。除此之外，所有引用类的方式都不会触发初始化，称为被动引用。被动引用的常见例子包括：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("通过子类引用父类的静态字段，不会导致子类初始化")]),s._v("。")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SubClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value 字段在 SuperClass 中定义")]),s._v("\n")])])]),t("ul",[t("li",[t("strong",[s._v("通过数组定义来引用类，不会触发此类的初始化")]),s._v("。该过程会对数组类进行初始化，数组类是一个由虚拟机自动生成的、直接继承自 "),t("code",[s._v("Object")]),s._v(" 的子类，其中包含了数组的属性和方法。")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" sca "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[s._v("常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发"),t("strong",[s._v("定义常量的类的初始化")]),s._v("。")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConstClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HELLOWORLD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h4",{attrs:{id:"类初始化细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类初始化细节"}},[s._v("#")]),s._v(" 类初始化细节")]),s._v(" "),t("p",[s._v("类初始化 "),t("code",[s._v("<clinit>()")]),s._v(" 方法的细节：")]),s._v(" "),t("ul",[t("li",[s._v("是由编译器自动收集类中所有类变量的赋值动作和静态语句块（static{} 块）中的语句合并产生的，编译器收集的顺序由语句在源文件中出现的顺序决定。特别注意的是，静态语句块只能访问到定义在它之前的类变量，定义在它之后的类变量只能赋值，不能访问。例如以下代码：")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 给变量赋值可以正常编译通过")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这句编译器会提示“非法向前引用”")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("ul",[t("li",[s._v("与类的构造函数（或者说实例构造器 "),t("code",[s._v("<init>()")]),s._v("）不同，不需要显式的调用父类的构造器。虚拟机会自动保证在子类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法运行之前，父类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法已经执行结束。因此虚拟机中第一个执行 "),t("code",[s._v("<clinit>()")]),s._v(" 方法的类肯定为 "),t("code",[s._v("java.lang.Object")]),s._v("。")]),s._v(" "),t("li",[s._v("由于父类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法先执行，也就意味着父类中定义的静态语句块要优于子类的变量赋值操作。例如以下代码：")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parent")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parent")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出结果是父类中的静态变量 A 的值，也就是 2。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("ul",[t("li",[t("code",[s._v("<clinit>()")]),s._v(" 方法对于类或接口不是必须的，如果一个类中不包含静态语句块，也没有对类变量的赋值操作，编译器可以不为该类生成 "),t("code",[s._v("<clinit>()")]),s._v(" 方法。")]),s._v(" "),t("li",[s._v("接口中不可以使用静态语句块，但仍然有类变量初始化的赋值操作，因此接口与类一样都会生成 "),t("code",[s._v("<clinit>()")]),s._v(" 方法。但接口与类不同的是，执行接口的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法不需要先执行父接口的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法。只有当父接口中定义的变量使用时，父接口才会初始化。另外，接口的实现类在初始化时也一样不会执行接口的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法。")]),s._v(" "),t("li",[s._v("虚拟机会保证一个类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法在多线程环境下被正确的加锁和同步，如果多个线程同时初始化一个类，只会有一个线程执行这个类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法，其它线程都会阻塞等待，直到活动线程执行 "),t("code",[s._v("<clinit>()")]),s._v(" 方法完毕。如果在一个类的 "),t("code",[s._v("<clinit>()")]),s._v(" 方法中有耗时的操作，就可能造成多个线程阻塞，在实际过程中此种阻塞很隐蔽。")])]),s._v(" "),t("h2",{attrs:{id:"_3-classloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-classloader"}},[s._v("#")]),s._v(" 3. ClassLoader")]),s._v(" "),t("p",[t("code",[s._v("ClassLoader")]),s._v(" 即类加载器，负责将类加载到 JVM。在 Java 虚拟机外部实现，以便让应用程序自己决定如何去获取所需要的类。")]),s._v(" "),t("p",[s._v("JVM 加载 "),t("code",[s._v("class")]),s._v(" 文件到内存有两种方式：")]),s._v(" "),t("ul",[t("li",[s._v("隐式加载 - JVM 自动加载需要的类到内存中。")]),s._v(" "),t("li",[s._v("显示加载 - 通过使用 "),t("code",[s._v("ClassLoader")]),s._v(" 来加载一个类到内存中。")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-类与类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-类与类加载器"}},[s._v("#")]),s._v(" 3.1. 类与类加载器")]),s._v(" "),t("p",[s._v("如何判断两个类是否相等：类本身相等，并且使用同一个类加载器进行加载。这是因为"),t("strong",[s._v("每一个 "),t("code",[s._v("ClassLoader")]),s._v(" 都拥有一个独立的类名称空间")]),s._v("。")]),s._v(" "),t("p",[s._v("这里的相等，包括类的 "),t("code",[s._v("Class")]),s._v(" 对象的 "),t("code",[s._v("equals()")]),s._v(" 方法、"),t("code",[s._v("isAssignableFrom()")]),s._v(" 方法、"),t("code",[s._v("isInstance()")]),s._v(" 方法的返回结果为 true，也包括使用 "),t("code",[s._v("instanceof")]),s._v(" 关键字做对象所属关系判定结果为 true。")]),s._v(" "),t("h3",{attrs:{id:"_3-2-类加载器分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-类加载器分类"}},[s._v("#")]),s._v(" 3.2. 类加载器分类")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200617115936.png",alt:"img"}})]),s._v(" "),t("h4",{attrs:{id:"bootstrap-classloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-classloader"}},[s._v("#")]),s._v(" Bootstrap ClassLoader")]),s._v(" "),t("p",[t("code",[s._v("Bootstrap ClassLoader")]),s._v(" ，即启动类加载器 ，"),t("strong",[s._v("负责加载 JVM 自身工作所需要的类")]),s._v("。")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("Bootstrap ClassLoader")]),s._v(" 会将存放在 "),t("code",[s._v("<JAVA_HOME>\\lib")]),s._v(" 目录中的，或者被 "),t("code",[s._v("-Xbootclasspath")]),s._v(" 参数所指定的路径中的，并且是虚拟机识别的（仅按照文件名识别，如 rt.jar，名字不符合的类库即使放在 lib 目录中也不会被加载）类库加载到虚拟机内存中")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("Bootstrap ClassLoader")]),s._v(" 是由 C++ 实现的，它完全由 JVM 自己控制的，启动类加载器无法被 Java 程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给启动类加载器，直接使用 "),t("code",[s._v("null")]),s._v(" 代替即可。")]),s._v(" "),t("h4",{attrs:{id:"extclassloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extclassloader"}},[s._v("#")]),s._v(" ExtClassLoader")]),s._v(" "),t("p",[t("code",[s._v("ExtClassLoader")]),s._v("，即扩展类加载器，这个类加载器是由 "),t("code",[s._v("ExtClassLoader(sun.misc.Launcher\\$ExtClassLoader)")]),s._v("实现的。")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("ExtClassLoader")]),s._v(" 负责将 "),t("code",[s._v("<JAVA_HOME>\\lib\\ext")]),s._v(" 或者被 "),t("code",[s._v("java.ext.dir")]),s._v(" 系统变量所指定路径中的所有类库加载到内存中，开发者可以直接使用扩展类加载器")]),s._v("。")]),s._v(" "),t("h4",{attrs:{id:"appclassloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appclassloader"}},[s._v("#")]),s._v(" AppClassLoader")]),s._v(" "),t("p",[t("code",[s._v("AppClassLoader")]),s._v("，即应用程序类加载器，这个类加载器是由 "),t("code",[s._v("AppClassLoader(sun.misc.Launcher\\$AppClassLoader)")]),s._v(" 实现的。由于这个类加载器是 "),t("code",[s._v("ClassLoader")]),s._v(" 中的 "),t("code",[s._v("getSystemClassLoader()")]),s._v(" 方法的返回值，因此一般称为系统类加载器。")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("AppClassLoader")]),s._v(" 负责加载用户类路径（即 "),t("code",[s._v("classpath")]),s._v("）上所指定的类库")]),s._v("，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。")]),s._v(" "),t("h4",{attrs:{id:"自定义类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义类加载器"}},[s._v("#")]),s._v(" 自定义类加载器")]),s._v(" "),t("p",[s._v("自定义类加载器可以做到如下几点：")]),s._v(" "),t("ul",[t("li",[s._v("在执行非置信代码之前，自动验证数字签名。")]),s._v(" "),t("li",[s._v("动态地创建符合用户特定需要的定制化构建类。")]),s._v(" "),t("li",[s._v("从特定的场所取得 java class，例如数据库中和网络中。")])]),s._v(" "),t("p",[s._v("假设，我们需要自定义一个名为 "),t("code",[s._v("FileSystemClassLoader")]),s._v(" 的类加载器，继承自 "),t("code",[s._v("java.lang.ClassLoader")]),s._v("，用于加载文件系统上的类。它首先根据类的全名在文件系统上查找类的字节代码文件（"),t("code",[s._v(".class")]),s._v(" 文件），然后读取该文件内容，最后通过 "),t("code",[s._v("defineClass()")]),s._v(" 方法来把这些字节代码转换成 "),t("code",[s._v("java.lang.Class")]),s._v(" 类的实例。")]),s._v(" "),t("p",[t("code",[s._v("java.lang.ClassLoader")]),s._v(" 类的方法 "),t("code",[s._v("loadClass()")]),s._v(" 实现了双亲委派模型的逻辑，因此自定义类加载器一般不去覆写它，而是通过覆写 "),t("code",[s._v("findClass()")]),s._v(" 方法。")]),s._v(" "),t("p",[t("code",[s._v("ClassLoader")]),s._v(" 常用的场景：")]),s._v(" "),t("ul",[t("li",[s._v("容器 - 典型应用：Servlet 容器（如：Tomcat、Jetty）、udf （Mysql、Hive）等。加载解压 jar 包或 war 包后，加载其 Class 到指定的类加载器中运行（通常需要考虑空间隔离）。")]),s._v(" "),t("li",[s._v("热部署、热插拔 - 应用启动后，动态获得某个类信息，然后加载到 JVM 中工作。很多著名的容器软件、框架（如：Spring 等），都使用 "),t("code",[s._v("ClassLoader")]),s._v(" 来实现自身的热部署。")])]),s._v(" "),t("p",[s._v("【示例】自定义一个类加载器")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileSystemClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" rootDir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileSystemClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" rootDir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rootDir "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rootDir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" classData "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classData "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defineClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" classData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" classData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" path "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("classNameToPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InputStream")]),s._v(" ins "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileInputStream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteArrayOutputStream")]),s._v(" baos "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ByteArrayOutputStream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bufferSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" buffer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("bufferSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bytesNumRead"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bytesNumRead "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ins"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                baos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bytesNumRead"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" baos"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toByteArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IOException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("classNameToPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" rootDir "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("File")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("separatorChar\n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'.'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("File")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("separatorChar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".class"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_3-3-双亲委派"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-双亲委派"}},[s._v("#")]),s._v(" 3.3. 双亲委派")]),s._v(" "),t("p",[s._v("理解双亲委派之前，先让我们看一个示例。")]),s._v(" "),t("p",[s._v("【示例】寻找类加载示例")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" loader "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getContextClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("sun.misc.Launcher$AppClassLoader@18b4aac2\nsun.misc.Launcher$ExtClassLoader@19e1023e\nnull\n")])])]),t("p",[s._v("从上面的结果可以看出，并没有获取到 "),t("code",[s._v("ExtClassLoader")]),s._v(" 的父 Loader，原因是 "),t("code",[s._v("Bootstrap Loader")]),s._v("（引导类加载器）是用 C 语言实现的，找不到一个确定的返回父 Loader 的方式，于是就返回 null。")]),s._v(" "),t("p",[s._v("下图展示的类加载器之间的层次关系，称为类加载器的"),t("strong",[s._v("双亲委派模型（Parents Delegation Model）")]),s._v("。"),t("strong",[s._v("该模型要求除了顶层的 Bootstrap ClassLoader 外，其余的类加载器都应有自己的父类加载器")]),s._v("。"),t("strong",[s._v("这里类加载器之间的父子关系一般通过组合（Composition）关系来实现，而不是通过继承（Inheritance）的关系实现")]),s._v("。")]),s._v(" "),t("div",{attrs:{align:"center"}},[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/cs/java/javacore/jvm/jmm-类加载-双亲委派.png",width:"500"}})]),s._v(" "),t("p",[t("strong",[s._v("（1）工作过程")])]),s._v(" "),t("p",[t("strong",[s._v("一个类加载器首先将类加载请求传送到父类加载器，只有当父类加载器无法完成类加载请求时才尝试加载")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("（2）好处")])]),s._v(" "),t("p",[t("strong",[s._v("使得 Java 类随着它的类加载器一起具有一种带有优先级的层次关系")]),s._v("，从而使得基础类得到统一：")]),s._v(" "),t("ul",[t("li",[s._v("系统类防止内存中出现多份同样的字节码")]),s._v(" "),t("li",[s._v("保证 Java 程序安全稳定运行")])]),s._v(" "),t("p",[s._v("例如： "),t("code",[s._v("java.lang.Object")]),s._v(" 存放在 rt.jar 中，如果编写另外一个 "),t("code",[s._v("java.lang.Object")]),s._v(" 的类并放到 "),t("code",[s._v("classpath")]),s._v(" 中，程序可以编译通过。因为双亲委派模型的存在，所以在 rt.jar 中的 "),t("code",[s._v("Object")]),s._v(" 比在 "),t("code",[s._v("classpath")]),s._v(" 中的 "),t("code",[s._v("Object")]),s._v(" 优先级更高，因为 rt.jar 中的 "),t("code",[s._v("Object")]),s._v(" 使用的是启动类加载器，而 "),t("code",[s._v("classpath")]),s._v(" 中的 "),t("code",[s._v("Object")]),s._v(" 使用的是应用程序类加载器。正因为 rt.jar 中的 "),t("code",[s._v("Object")]),s._v(" 优先级更高，因为程序中所有的 "),t("code",[s._v("Object")]),s._v(" 都是这个 "),t("code",[s._v("Object")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("（3）实现")])]),s._v(" "),t("p",[s._v("以下是抽象类 "),t("code",[s._v("java.lang.ClassLoader")]),s._v(" 的代码片段，其中的 "),t("code",[s._v("loadClass()")]),s._v(" 方法运行过程如下：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// The parent class loader for delegation")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoadingLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 首先判断该类型是否已经被加载")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findLoadedClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果没有被加载，就委托给父类加载或者委派给启动类加载器加载")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果存在父类加载器，就委派给父类加载器加载")]),s._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果不存在父类加载器，就检查是否是由启动类加载器加载的类，通过调用本地方法native Class findBootstrapClass(String name)")]),s._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findBootstrapClassOrNull")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果父类加载器加载失败，会抛出 ClassNotFoundException")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果父类加载器和启动类加载器都不能完成加载任务，才调用自身的加载功能")]),s._v("\n                    c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolveClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("【说明】")]),s._v(" "),t("ul",[t("li",[s._v("先检查类是否已经加载过，如果没有则让父类加载器去加载。")]),s._v(" "),t("li",[s._v("当父类加载器加载失败时抛出 "),t("code",[s._v("ClassNotFoundException")]),s._v("，此时尝试自己去加载。")])]),s._v(" "),t("h3",{attrs:{id:"_3-4-classloader-参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-classloader-参数"}},[s._v("#")]),s._v(" 3.4. ClassLoader 参数")]),s._v(" "),t("p",[s._v("在生产环境上启动 java 应用时，通常会指定一些 "),t("code",[s._v("ClassLoader")]),s._v(" 参数，以加载应用所需要的 lib：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("java -jar xxx.jar -classpath lib/*\n")])])]),t("p",[t("code",[s._v("ClassLoader")]),s._v(" 相关参数选项：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("参数选项")]),s._v(" "),t("th",[s._v("ClassLoader 类型")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("-Xbootclasspath")])]),s._v(" "),t("td",[t("code",[s._v("Bootstrap ClassLoader")])]),s._v(" "),t("td",[s._v("设置 "),t("code",[s._v("Bootstrap ClassLoader")]),s._v(" 搜索路径。【不常用】")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-Xbootclasspath/a")])]),s._v(" "),t("td",[t("code",[s._v("Bootstrap ClassLoader")])]),s._v(" "),t("td",[s._v("把路径添加到已存在的 "),t("code",[s._v("Bootstrap ClassLoader")]),s._v(" 搜索路径后面。【常用】")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-Xbootclasspath/p")])]),s._v(" "),t("td",[t("code",[s._v("Bootstrap ClassLoader")])]),s._v(" "),t("td",[s._v("把路径添加到已存在的 "),t("code",[s._v("Bootstrap ClassLoader")]),s._v(" 搜索路径前面。【不常用】")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-Djava.ext.dirs")])]),s._v(" "),t("td",[t("code",[s._v("ExtClassLoader")])]),s._v(" "),t("td",[s._v("设置 "),t("code",[s._v("ExtClassLoader")]),s._v(" 搜索路径。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("-Djava.class.path")]),s._v(" 或 "),t("code",[s._v("-cp")]),s._v(" 或 "),t("code",[s._v("-classpath")])]),s._v(" "),t("td",[t("code",[s._v("AppClassLoader")])]),s._v(" "),t("td",[s._v("设置 "),t("code",[s._v("AppClassLoader")]),s._v(" 搜索路径。")])])])]),s._v(" "),t("h2",{attrs:{id:"_4-类的加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-类的加载"}},[s._v("#")]),s._v(" 4. 类的加载")]),s._v(" "),t("h3",{attrs:{id:"_4-1-类加载方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-类加载方式"}},[s._v("#")]),s._v(" 4.1. 类加载方式")]),s._v(" "),t("p",[s._v("类加载有三种方式：")]),s._v(" "),t("ul",[t("li",[s._v("命令行启动应用时候由 JVM 初始化加载")]),s._v(" "),t("li",[s._v("通过 "),t("code",[s._v("Class.forName()")]),s._v(" 方法动态加载")]),s._v(" "),t("li",[s._v("通过 "),t("code",[s._v("ClassLoader.loadClass()")]),s._v(" 方法动态加载")])]),s._v(" "),t("p",[t("strong",[t("code",[s._v("Class.forName()")]),s._v(" 和 "),t("code",[s._v("ClassLoader.loadClass()")]),s._v(" 区别")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Class.forName()")]),s._v(" 将类的 "),t("code",[s._v(".class")]),s._v(" 文件加载到 jvm 中之外，还会对类进行解释，执行类中的 "),t("code",[s._v("static")]),s._v(" 块；")]),s._v(" "),t("li",[t("code",[s._v("ClassLoader.loadClass()")]),s._v(" 只干一件事情，就是将 "),t("code",[s._v(".class")]),s._v(" 文件加载到 jvm 中，不会执行 "),t("code",[s._v("static")]),s._v(" 中的内容，只有在 "),t("code",[s._v("newInstance")]),s._v(" 才会去执行 "),t("code",[s._v("static")]),s._v(" 块。")]),s._v(" "),t("li",[t("code",[s._v("Class.forName(name, initialize, loader)")]),s._v(" 带参函数也可控制是否加载 "),t("code",[s._v("static")]),s._v(" 块。并且只有调用了 "),t("code",[s._v("newInstance()")]),s._v(" 方法采用调用构造函数，创建类的对象 。")])]),s._v(" "),t("h3",{attrs:{id:"_4-2-加载类错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-加载类错误"}},[s._v("#")]),s._v(" 4.2. 加载类错误")]),s._v(" "),t("h4",{attrs:{id:"classnotfoundexception"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classnotfoundexception"}},[s._v("#")]),s._v(" ClassNotFoundException")]),s._v(" "),t("p",[t("code",[s._v("ClassNotFoundException")]),s._v(" 异常出镜率极高。"),t("strong",[t("code",[s._v("ClassNotFoundException")]),s._v(" 表示当前 "),t("code",[s._v("classpath")]),s._v(" 下找不到指定类")]),s._v("。")]),s._v(" "),t("p",[s._v("常见问题原因：")]),s._v(" "),t("ul",[t("li",[s._v("调用 "),t("code",[s._v("Class")]),s._v(" 的 "),t("code",[s._v("forName()")]),s._v(" 方法，未找到类。")]),s._v(" "),t("li",[s._v("调用 "),t("code",[s._v("ClassLoader")]),s._v(" 中的 "),t("code",[s._v("loadClass()")]),s._v(" 方法，未找到类。")]),s._v(" "),t("li",[s._v("调用 "),t("code",[s._v("ClassLoader")]),s._v(" 中的 "),t("code",[s._v("findSystemClass()")]),s._v(" 方法，未找到类。")])]),s._v(" "),t("p",[s._v("【示例】执行以下代码，会抛出 "),t("code",[s._v("ClassNotFoundException")]),s._v(" 异常：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundExceptionDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NotFound"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassNotFoundException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("解决方法：检查 "),t("code",[s._v("classpath")]),s._v(" 下有没有相应的 class 文件。")]),s._v(" "),t("h4",{attrs:{id:"noclassdeffounderror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#noclassdeffounderror"}},[s._v("#")]),s._v(" NoClassDefFoundError")]),s._v(" "),t("p",[s._v("常见问题原因：")]),s._v(" "),t("ul",[t("li",[s._v("类依赖的 Class 或者 jar 不存在。")]),s._v(" "),t("li",[s._v("类文件存在，但是存在不同的域中。")])]),s._v(" "),t("p",[s._v("解决方法：现代 Java 项目，一般使用 "),t("code",[s._v("maven")]),s._v("、"),t("code",[s._v("gradle")]),s._v(" 等构建工具管理项目，仔细检查找不到的类所在的 jar 包是否已添加为依赖。")]),s._v(" "),t("h4",{attrs:{id:"unsatisfiedlinkerror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unsatisfiedlinkerror"}},[s._v("#")]),s._v(" UnsatisfiedLinkError")]),s._v(" "),t("p",[s._v("这个异常倒不是很常见，但是出错的话，通常是在 JVM 启动的时候如果一不小心将在 JVM 中的某个 lib 删除了，可能就会报这个错误了。")]),s._v(" "),t("p",[s._v("【示例】执行以下代码，会抛出 "),t("code",[s._v("UnsatisfiedLinkError")]),s._v(" 错误。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnsatisfiedLinkErrorDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nativeMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadLibrary")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NoLib"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnsatisfiedLinkErrorDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nativeMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("【输出】")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("UnsatisfiedLinkError")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" no "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NoLib")]),s._v(" in java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("library"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path\n\tat "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadLibrary")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1867")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tat "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Runtime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadLibrary0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runtime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("870")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tat "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadLibrary")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1122")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tat "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("github"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dunwu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("javacore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jvm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classloader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("UnsatisfiedLinkErrorDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("clinit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnsatisfiedLinkErrorDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h4",{attrs:{id:"classcastexception"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classcastexception"}},[s._v("#")]),s._v(" ClassCastException")]),s._v(" "),t("p",[t("code",[s._v("ClassCastException")]),s._v(" 异常通常是在程序中强制类型转换失败时出现。")]),s._v(" "),t("p",[s._v("【示例】执行以下代码，会抛出 "),t("code",[s._v("ClassCastException")]),s._v(" 异常。")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassCastExceptionDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptyClass")]),s._v(" newObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptyClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptyClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("【输出】")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" in thread "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("ClassCastException")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Object")]),s._v(" cannot be cast "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("github"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dunwu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("javacore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jvm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classloader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassCastExceptionDemo")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptyClass")]),s._v("\n\tat "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("github"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dunwu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("javacore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jvm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("classloader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("ClassCastExceptionDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassCastExceptionDemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h2",{attrs:{id:"_5-参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-参考资料"}},[s._v("#")]),s._v(" 5. 参考资料")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://book.douban.com/subject/34907497/",target:"_blank",rel:"noopener noreferrer"}},[s._v("《深入理解 Java 虚拟机》"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://time.geekbang.org/column/intro/100010301",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入拆解 Java 虚拟机"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5e479c2cf265da575f4e65e4",target:"_blank",rel:"noopener noreferrer"}},[s._v("一篇图文彻底弄懂类加载器与双亲委派机制"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"http://www.ityouknow.com/jvm/2017/08/19/class-loading-principle.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jvm 系列(一):Java 类的加载机制"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);